{"version":3,"sources":["logo.png","Card.js","serviceWorker.js","index.js","App.js","Logo.js"],"names":["module","exports","Card","this","props","title","className","question","content","hidden","required","pages","Array","ToPreviousCard","page","document","getElementsByClassName","style","display","currentIndex","indexOf","backCardName","backCard","opacity","classList","add","ToNextCard","includes","ValidateInput","nextCardName","nextCard","task","GetTaskName","console","log","getElementById","value","AskForInput","task_radioboxes","i","checked","alert","tasks","ToFirstCard","ToFinalCard","wsi","split","annotation","inclusion","patchwidth","patchheight","overlapwidth","overlapheight","onannotation","onforeground","saveto","command","innerHTML","RenderResult","ToClipBoard","copyTarget","execCommand","join","id","type","webkitdirectory","directory","startsWith","contents","slice","radios","forEach","contentName","push","name","class","checkboxes","params","length","paramName","paramDefault","defaultValue","buttons","visibility","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","href","src","LogoImg","alt","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98c991a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.efe517d4.png\";","import React, { Component } from 'react'\nimport './Card.css'\n\n\nexport default class Card extends Component {\n\trender() {\n\t\tconst {\n\t\t\ttitle,\n\t\t\tclassName,\n\t\t\tquestion,\n\t\t\tcontent,\n\t\t\thidden,\n\t\t\trequired\n\t\t} = this.props;\n\n\t\tfunction Title() {\n\t\t\tif (required === \"True\") {\n\t\t\t\treturn <div className=\"title required\">{title}</div>\n\t\t\t} else if (required === \"False\") {\n\t\t\t\treturn <div className=\"title optional\">{title}</div>\n\t\t\t} else if (required === \"Ready\") {\n\t\t\t\treturn <div className=\"title ready\">{title}</div>\n\t\t\t}\n\t\t}\n\n\t\tfunction Content() {\n\t\t\tif (content === \"fileSelect\") {\n\t\t\t\treturn <div className=\"content\"><input id={className} type=\"file\"/></div>\n\t\t\t} else if (content === \"directorySelect\") {\n\t\t\t\treturn <div className=\"content\"><input id={className} type=\"file\" webkitdirectory=\"true\" directory /></div>\n\t\t\t} else if (content.startsWith(\"radio\")) {\n\t\t\t\tconst contents = content.split(\" \").slice(1,)\n\t\t\t\tvar radios = Array([])\n\t\t\t\tcontents.forEach (contentName => {\n\t\t\t\t\tradios.push(<div className=\"content radio\"><label><input name={className} class={className} type=\"radio\"/>{contentName}</label></div>)\n\t\t\t\t})\n\t\t\t\treturn radios\n\t\t\t} else if (content.startsWith(\"checkbox\")) {\n\t\t\t\tconst contents = content.split(\" \").slice(1,)\n\t\t\t\tvar checkboxes = Array([])\n\t\t\t\tcontents.forEach (contentName => {\n\t\t\t\t\tcheckboxes.push(<div className=\"content checkbox\"><input id={contentName} class={className} type=\"checkbox\"/>{contentName}</div>)\n\t\t\t\t})\n\t\t\t\treturn checkboxes\n\t\t\t} else if (content.startsWith(\"param\")) {\n\t\t\t\tconst contents = content.split(\" \").slice(1,)\n\t\t\t\tvar params = Array([])\n\t\t\t\tfor (var i = 0; i < contents.length; i++) {\n\t\t\t\t\tvar paramName = contents[i]\n\t\t\t\t\tvar paramDefault = contents[i+1]\n\t\t\t\t\ti++\n\t\t\t\t\tparams.push(<div className=\"content param\">{paramName}<input type=\"text\" className=\"parambox\" id={paramName} defaultValue={paramDefault}/></div>)\n\t\t\t\t}\n\t\t\t\treturn params\n\t\t\t} else if (content === \"result\") {\n\t\t\t\treturn <div id=\"result\"></div>\n\t\t\t}\n\t\t}\n\n\t\tfunction RenderResult() {\n\t\t\tconst wsi = document.getElementById(\"wsi\").value.split(\"\\\\\")[2]\n\t\t\tvar task\n\t\t\tvar task_radioboxes = document.getElementsByClassName(\"task\")\n\t\t\tconst tasks = Array([\"classification\", \"detection\", \"segmentation\", \"none\"])\n\t\t\tfor (var i=1; i < 5; i++) {\n\t\t\t\tif (task_radioboxes[i].checked) {\n\t\t\t\t\ttask = tasks[0][i-1]\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst annotation = document.getElementById(\"annotation\").value.split(\"\\\\\")[2]\n\t\t\tconst inclusion = document.getElementById(\"inclusion\").value.split(\"\\\\\")[2]\n\t\t\tconst patchwidth = document.getElementById(\"PatchWidth\").value\n\t\t\tconst patchheight = document.getElementById(\"PatchHeight\").value\n\t\t\tconst overlapwidth = document.getElementById(\"OverlapWidth\").value\n\t\t\tconst overlapheight = document.getElementById(\"OverlapHeight\").value\n\t\t\tconst onannotation = document.getElementById(\"OnAnnotation\").value\n\t\t\tconst onforeground = document.getElementById(\"OnForeground\").value\n\t\t\tconst saveto = document.getElementById(\"saveTo\").value.split(\"\\\\\")[2]\n\t\t\tconst startsample = document.getElementById(\"Start\").checked\n\t\t\tconst finishedsample = document.getElementById(\"Finished\").checked\n\t\t\tvar command = \"wsiprocess \" +  wsi + \" \" + task\n\t\t\tif (annotation) {\n\t\t\t\tcommand += \" --an \" + annotation\n\t\t\t}\n\t\t\tif (inclusion) {\n\t\t\t\tcommand += \" --in \" + inclusion\n\t\t\t}\n\t\t\tcommand += \" --pw \" + patchwidth + \" --ph \" + patchheight + \" --ow \" + overlapwidth + \" --oh \" + overlapheight\n\t\t\tcommand += \" --oa \" + onannotation + \" --of \" + onforeground\n\t\t\tif (saveto) {\n\t\t\t\tcommand += \" --st \" + saveto\n\t\t\t}\n\t\t\tif (startsample) {\n\t\t\t\tcommand += \" --ss\"\n\t\t\t}\n\t\t\tif (finishedsample) {\n\t\t\t\tcommand += \" --fs \"\n\t\t\t}\n\t\t\tdocument.getElementById(\"result\").innerHTML = command\n\t\t}\n\n\t\tconst pages = Array([\"wsi\", \"task\", \"annotation\", \"inclusion\", \"sizes\", \"detail\", \"saveTo\", \"checkSample\", \"command\"])\n\n\t\tlet ToPreviousCard = (page) => {\n\t\t\tvar currentCard = document.getElementsByClassName(page)[0]\n\t\t\tcurrentCard.style.display = \"none\"\n\n\t\t\tconst currentIndex = pages[0].indexOf(page)\n\t\t\tconst backCardName = pages[0][currentIndex - 1]\n\t\t\tvar backCard = document.getElementsByClassName(\"Card \" + backCardName)[0]\n\t\t\tbackCard.style.opacity = 0\n\t\t\tbackCard.style.display = \"\"\n\t\t\tbackCard.classList.add(\"show\")\n\t\t}\n\n\t\tlet ToNextCard = (page) => {\n\t\t\tif ([\"wsi\", \"task\"].includes(page)) {\n\t\t\t\tif (!ValidateInput(page)) {\n\t\t\t\t\tAskForInput(page)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar currentCard = document.getElementsByClassName(page)[0]\n\t\t\tcurrentCard.style.display = \"none\"\n\n\t\t\tconst currentIndex = pages[0].indexOf(page)\n\t\t\tconst nextCardName = pages[0][currentIndex + 1]\n\t\t\tvar nextCard = document.getElementsByClassName(\"Card \" + nextCardName)[0]\n\t\t\tnextCard.style.opacity = 0\n\t\t\tnextCard.style.display = \"\"\n\t\t\tnextCard.classList.add(\"show\")\n\n\t\t\tvar task = GetTaskName()\n\t\t\tconsole.log(task)\n\t\t\tif (page === \"task\" && task === \"detection\") {\n\t\t\t\tdocument.getElementById(\"OnAnnotation\").value = 0.01\n\t\t\t\tdocument.getElementById(\"OnForeground\").value = 0.8\n\t\t\t}\n\t\t}\n\n\t\tlet ValidateInput = (page) => {\n\t\t\tif (page === \"wsi\") {\n\t\t\t\tconst wsi = document.getElementById(\"wsi\").value\n\t\t\t\treturn wsi\n\t\t\t} else if (page === \"task\") {\n\t\t\t\tvar task_radioboxes = document.getElementsByClassName(\"task\")\n\t\t\t\tfor (var i=1; i < 5; i++) {\n\t\t\t\t\tif (task_radioboxes[i].checked) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\n\t\tlet AskForInput = (page) => {\n\t\t\talert(\"You need to set a \" + page + \" on this card.\")\n\t\t}\n\n\t\tlet GetTaskName = () => {\n\t\t\tvar task\n\t\t\tvar task_radioboxes = document.getElementsByClassName(\"task\")\n\t\t\tconst tasks = Array([\"classification\", \"detection\", \"segmentation\", \"none\"])\n\t\t\tfor (var i=1; i < 5; i++) {\n\t\t\t\tif (task_radioboxes[i].checked) {\n\t\t\t\t\ttask = tasks[0][i-1]\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn task\n\t\t}\n\n\t\tlet ToFirstCard = (page) => {\n\t\t\tvar currentCard = document.getElementsByClassName(page)[0]\n\t\t\tcurrentCard.style.display = \"none\"\n\n\t\t\tvar nextCard = document.getElementsByClassName(\"Card wsi\")[0]\n\t\t\tnextCard.style.display = \"\"\n\t\t\tnextCard.style.opacity = 0\n\t\t\tnextCard.classList.add(\"show\")\n\t\t}\n\n\t\tlet ToFinalCard = (page) => {\n\t\t\tvar currentCard = document.getElementsByClassName(page)[0]\n\t\t\tcurrentCard.style.display = \"none\"\n\n\t\t\tconst currentIndex = pages[0].indexOf(page)\n\t\t\tconst nextCardName = pages[0][currentIndex + 1]\n\t\t\tvar nextCard = document.getElementsByClassName(\"Card \" + nextCardName)[0]\n\t\t\tnextCard.style.opacity = 0\n\t\t\tnextCard.style.display = \"\"\n\t\t\tnextCard.classList.add(\"show\")\n\n\t\t\tRenderResult()\n\t\t}\n\n\t\t// not fully implemented && not used\n\t\tlet ToClipBoard = () => {\n\t\t\tvar copyTarget = document.getElementById(\"result\").innerHTML\n\t\t\tdocument.execCommand(\"Copy\")\n\t\t\talert(\"Copied : \" + copyTarget.value)\n\t\t}\n\n\t\tfunction Transition() {\n\t\t\tvar buttons = Array([])\n\t\t\tif (className === \"wsi\") {\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"back\" value=\"Back\" style={{visibility: \"hidden\"}}/>)\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"next\" value=\"Next\" onClick={() => ToNextCard(className)}/>)\n\t\t\t} else if (className === \"checkSample\"){\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"back\" value=\"Back\" onClick={() => ToPreviousCard(className)}/>)\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"next\" value=\"Next\" onClick={() => ToFinalCard(className)}/>)\n\t\t\t} else if (className === \"command\"){\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"copy\" value=\"Copy Command\" onClick={() => ToClipBoard()} style={{visibility: \"hidden\"}}/>)\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"next\" value=\"Try Again?\" onClick={() => ToFirstCard(className)}/>)\n\t\t\t} else {\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"back\" value=\"Back\" onClick={() => ToPreviousCard(className)}/>)\n\t\t\t\tbuttons.push(<input type=\"button\" className=\"next\" value=\"Next\" onClick={() => ToNextCard(className)}/>)\n\t\t\t}\n\t\t\treturn buttons\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={['Card', className].join(' ')}  style={{ display: hidden ? 'none' : '' }}>\n\t\t\t\t<Title/>\n\t\t\t\t<div className=\"question\">{question}</div>\n\t\t\t\t<Content/>\n\t\t\t\t<div className=\"transition\">\n\t\t\t\t\t<Transition/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Logo from './Logo'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Logo />, document.getElementById('logo'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport Card from './Card.js'\n\nexport default function App() {\n  return (\n    <div className=\"App-header\">\n      <div className=\"wsiprocess\">\n        <Card\n          title=\"Whole Slide Image\"\n          className=\"wsi\"\n          question=\"Select target WSI.\"\n          content=\"fileSelect\"\n          hidden=\"\"\n          required=\"True\"\n        />\n        <Card\n          title=\"Task\"\n          className=\"task\"\n          question=\"What task will you deal with?\"\n          content=\"radio Classification Detection Segmentation Not-Specified\"\n          hidden=\"yes\"\n          required=\"True\"\n        />\n        <Card\n          title=\"Annotation\"\n          className=\"annotation\"\n          question=\"Did you make annotation file?\"\n          content=\"fileSelect\"\n          hidden=\"yes\"\n          required=\"False\"\n        />\n        <Card\n          title=\"Inclusion\"\n          className=\"inclusion\"\n          question=\"Did you make inclusion file?\"\n          content=\"fileSelect\"\n          hidden=\"yes\"\n          required=\"False\"\n        />\n        <Card\n          title=\"Sizes\"\n          className=\"sizes\"\n          question=\"What size do you want the patches to be?\"\n          content=\"param PatchWidth 256 PatchHeight 256 OverlapWidth 1 OverlapHeight 1\"\n          hidden=\"yes\"\n          required=\"False\"\n        />\n        <Card\n          title=\"Detail\"\n          className=\"detail\"\n          question=\"How much do you want the patches to be on the annotation / foreground?\"\n          content=\"param OnAnnotation 0.8 OnForeground 0.8\"\n          hidden=\"yes\"\n          required=\"False\"\n        />\n        <Card\n          title=\"Save to\"\n          className=\"saveTo\"\n          question=\"Where do you want WSIPROCESS to output the result files?\"\n          content=\"directorySelect\"\n          hidden=\"yes\"\n          required=\"False\"\n        />\n        <Card\n          title=\"Check Sample\"\n          className=\"checkSample\"\n          question=\"Do you want to check the samples when the script starts / finished?\"\n          content=\"checkbox Start Finished\"\n          hidden=\"yes\"\n          required=\"False\"\n        />\n        <Card\n          title=\"Command\"\n          className=\"command\"\n          question=\"Command for you!\"\n          content=\"result\"\n          hidden=\"yes\"\n          required=\"Ready\"\n        />\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport './Logo.css'\nimport LogoImg from './logo.png'\n\nexport default function Logo() {\n\treturn (\n\t\t<div className=\"logoArea\">\n\t\t\t<a href=\"https://github.com/tand826/wsiprocess\">\n\t\t\t\t<img className=\"logoImage\" src={LogoImg} alt=\"logo\" />\n\t\t\t</a>\n\t\t</div>\n\t)\n}"],"sourceRoot":""}